name: Create merge PR

on:
  push:
    branches:
    - 'main*'

jobs:
  create-merge:
    runs-on: ubuntu-latest
    permissions: write-all

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - id: branches
        shell: pwsh
        run: |
          # key - source branch, value - target branch
          $mapBranches = @{
            "main" = "main2"
          }

          $targetBranch = $mapBranches["${{ github.ref_name }}"]
          $sourceBranch = "merge-${{ github.ref_name }}-to-$targetBranch"

          "sourceBranch=$sourceBranch" >> $env:GITHUB_OUTPUT
          "targetBranch=$targetBranch" >> $env:GITHUB_OUTPUT

          echo "sourceBranch = $sourceBranch"
          echo "targetBranch = $targetBranch"

          # check if merge branch aready exists
          $mergeBranchAlreadyExists = git ls-remote --heads https://github.com/revizto/revizto.git $sourceBranch

          if (-not $mergeBranchAlreadyExists)
          {
            git checkout -b $sourceBranch
            git push origin $sourceBranch

            "merge=true" >> $env:GITHUB_OUTPUT
          }

      - id: create_pr
        name: Create merge request
        if: ${{ steps.branches.outputs.merge }}
        uses: repo-sync/pull-request@v2
        with:
          source_branch: ${{ steps.branches.outputs.sourceBranch }}
          destination_branch: ${{ steps.branches.outputs.targetBranch }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          # label must be same that is used in automerge step
          pr_label: "auto-pr"

      - name: Approve Pull Request
        if: ${{ steps.branches.outputs.merge }}
        uses: juliangruber/approve-pull-request-action@v2.0.0
        with:
          # we have to use token other than that was used to create this PR
          github-token: ${{ secrets.PAT }}
          number: ${{ steps.create_pr.outputs.pr_number }}

      - id: automerge
        if: ${{ steps.branches.outputs.merge }}
        name: automerge
        uses: pascalgn/automerge-action@v0.15.6
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          PULL_REQUEST: ${{ steps.create_pr.outputs.pr_number }}
          # it seems unnecessary if number is provided, but we'll keep it
          MERGE_LABELS: "auto-pr"

      # if automerge failed to merge, it still results with success
      - name: Check automerge result
        # if: ${{ steps.automerge.outputs.mergeResult != 'merged' }}
        if: ${{ steps.branches.outputs.merge && (steps.automerge.outputs.mergeResult == 'not_ready' || steps.automerge.outputs.mergeResult == 'merge_failed') }}
        shell: bash
        run: |
          echo "Pull request was not merged!"
          exit 1
